# Wake Word Generator - Linux Ubuntu Edition
# Docker Compose for GPU-accelerated deployment

version: '3.8'

services:
  wakeword-generator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wakeword-generator-linux
    ports:
      - "7860:7860"
    volumes:
      # Persistent data storage
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
      # Configuration
      - ./config:/app/config
    environment:
      # GPU settings
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      # Performance optimization
      - OMP_NUM_THREADS=8
      - MKL_NUM_THREADS=8
      - TF_FORCE_GPU_ALLOW_GROWTH=true
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
      # Application settings
      - PYTHONUNBUFFERED=1
      - GRADIO_SERVER_NAME=0.0.0.0
      - GRADIO_SERVER_PORT=7860
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 8G
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Optional: Redis for session management
  redis:
    image: redis:7-alpine
    container_name: wakeword-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: wakeword-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    profiles: ["monitoring"]

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: wakeword-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=wakeword2024
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    profiles: ["monitoring"]

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: wakeword-network